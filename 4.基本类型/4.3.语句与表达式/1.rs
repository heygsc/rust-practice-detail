//题目
// 使用两种方法让代码工作起来
fn main() {
   let v = {
       let mut x = 1;
       x += 2
   };

   assert_eq!(v, 3);
}

//答案
//解法1
fn main() {
   let v = {
       let mut x = 1;
       x += 2
   };
   assert_eq!(v, ()); //3变为()
}

//解法2
fn main() {
   let v = {
       let mut x = 1;
       x += 2;
       x //x作为返回值
   };
   assert_eq!(v, 3);
}

// 解析
// 解法1
// x += 2 的类型是 ()，表示这个操作不需要返回任何值。
// 它的作用是将x的值增加2，而不是返回一个新值。
// 所以这里第一种方法是把3变为(),因为返回值是()。

// 解法2
// 在x+=2后面添加分号，并添加一行x。
// 这样返回值就是x的值，即为3。
